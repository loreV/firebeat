/*!
 *  howler.js v1.1.25
 *  howlerjs.com
 *
 *  (c) 2013-2014, James Simpson of GoldFire Studios
 *  goldfirestudios.com
 *
 *  MIT License
 */
//!function(){var e={},t=null,n=!0,r=!1;try{"undefined"!=typeof AudioContext?t=new AudioContext:"undefined"!=typeof webkitAudioContext?t=new webkitAudioContext:n=!1}catch(i){n=!1}if(!n)if("undefined"!=typeof Audio)try{new Audio}catch(i){r=!0}else r=!0;if(n){var s=void 0===t.createGain?t.createGainNode():t.createGain();s.gain.value=1,s.connect(t.destination)}var o=function(e){this._volume=1,this._muted=!1,this.usingWebAudio=n,this.ctx=t,this.noAudio=r,this._howls=[],this._codecs=e,this.iOSAutoEnable=!0};o.prototype={volume:function(e){var t=this;if(e=parseFloat(e),e>=0&&1>=e){t._volume=e,n&&(s.gain.value=e);for(var r in t._howls)if(t._howls.hasOwnProperty(r)&&t._howls[r]._webAudio===!1)for(var i=0;i<t._howls[r]._audioNode.length;i++)t._howls[r]._audioNode[i].volume=t._howls[r]._volume*t._volume;return t}return n?s.gain.value:t._volume},mute:function(){return this._setMuted(!0),this},unmute:function(){return this._setMuted(!1),this},_setMuted:function(e){var t=this;t._muted=e,n&&(s.gain.value=e?0:t._volume);for(var r in t._howls)if(t._howls.hasOwnProperty(r)&&t._howls[r]._webAudio===!1)for(var i=0;i<t._howls[r]._audioNode.length;i++)t._howls[r]._audioNode[i].muted=e},codecs:function(e){return this._codecs[e]},_enableiOSAudio:function(){var e=this;if(!t||!e._iOSEnabled&&/iPhone|iPad|iPod/i.test(navigator.userAgent)){e._iOSEnabled=!1;var n=function(){var r=t.createBuffer(1,1,22050),i=t.createBufferSource();i.buffer=r,i.connect(t.destination),void 0===i.start?i.noteOn(0):i.start(0),setTimeout(function(){(i.playbackState===i.PLAYING_STATE||i.playbackState===i.FINISHED_STATE)&&(e._iOSEnabled=!0,e.iOSAutoEnable=!1,window.removeEventListener("touchstart",n,!1))},0)};return window.addEventListener("touchstart",n,!1),e}}};var u=null,a={};r||(u=new Audio,a={mp3:!!u.canPlayType("audio/mpeg;").replace(/^no$/,""),opus:!!u.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!u.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!u.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),aac:!!u.canPlayType("audio/aac;").replace(/^no$/,""),m4a:!!(u.canPlayType("audio/x-m4a;")||u.canPlayType("audio/m4a;")||u.canPlayType("audio/aac;")).replace(/^no$/,""),mp4:!!(u.canPlayType("audio/x-mp4;")||u.canPlayType("audio/mp4;")||u.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!!u.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")});var f=new o(a),l=function(e){var r=this;r._autoplay=e.autoplay||!1,r._buffer=e.buffer||!1,r._duration=e.duration||0,r._format=e.format||null,r._loop=e.loop||!1,r._loaded=!1,r._sprite=e.sprite||{},r._src=e.src||"",r._pos3d=e.pos3d||[0,0,-.5],r._volume=void 0!==e.volume?e.volume:1,r._urls=e.urls||[],r._rate=e.rate||1,r._model=e.model||null,r._onload=[e.onload||function(){}],r._onloaderror=[e.onloaderror||function(){}],r._onend=[e.onend||function(){}],r._onpause=[e.onpause||function(){}],r._onplay=[e.onplay||function(){}],r._onendTimer=[],r._webAudio=n&&!r._buffer,r._audioNode=[],r._webAudio&&r._setupAudioNode(),void 0!==t&&t&&f.iOSAutoEnable&&f._enableiOSAudio(),f._howls.push(r),r.load()};if(l.prototype={load:function(){var e=this,t=null;if(r)return void e.on("loaderror");for(var n=0;n<e._urls.length;n++){var i,s;if(e._format)i=e._format;else{if(s=e._urls[n],i=/^data:audio\/([^;,]+);/i.exec(s),i||(i=/\.([^.]+)$/.exec(s.split("?",1)[0])),!i)return void e.on("loaderror");i=i[1].toLowerCase()}if(a[i]){t=e._urls[n];break}}if(!t)return void e.on("loaderror");if(e._src=t,e._webAudio)c(e,t);else{var u=new Audio;u.addEventListener("error",function(){u.error&&4===u.error.code&&(o.noAudio=!0),e.on("loaderror",{type:u.error?u.error.code:0})},!1),e._audioNode.push(u),u.src=t,u._pos=0,u.preload="auto",u.volume=f._muted?0:e._volume*f.volume();var l=function(){e._duration=Math.ceil(10*u.duration)/10,0===Object.getOwnPropertyNames(e._sprite).length&&(e._sprite={_default:[0,1e3*e._duration]}),e._loaded||(e._loaded=!0,e.on("load")),e._autoplay&&e.play(),u.removeEventListener("canplaythrough",l,!1)};u.addEventListener("canplaythrough",l,!1),u.load()}return e},urls:function(e){var t=this;return e?(t.stop(),t._urls="string"==typeof e?[e]:e,t._loaded=!1,t.load(),t):t._urls},play:function(e,n){var r=this;return"function"==typeof e&&(n=e),e&&"function"!=typeof e||(e="_default"),r._loaded?r._sprite[e]?(r._inactiveNode(function(i){i._sprite=e;var s=i._pos>0?i._pos:r._sprite[e][0]/1e3,o=0;r._webAudio?(o=r._sprite[e][1]/1e3-i._pos,i._pos>0&&(s=r._sprite[e][0]/1e3+s)):o=r._sprite[e][1]/1e3-(s-r._sprite[e][0]/1e3);var u,a=!(!r._loop&&!r._sprite[e][2]),l="string"==typeof n?n:Math.round(Date.now()*Math.random())+"";if(function(){var t={id:l,sprite:e,loop:a};u=setTimeout(function(){!r._webAudio&&a&&r.stop(t.id).play(e,t.id),r._webAudio&&!a&&(r._nodeById(t.id).paused=!0,r._nodeById(t.id)._pos=0,r._clearEndTimer(t.id)),r._webAudio||a||r.stop(t.id),r.on("end",l)},1e3*o),r._onendTimer.push({timer:u,id:t.id})}(),r._webAudio){var c=r._sprite[e][0]/1e3,h=r._sprite[e][1]/1e3;i.id=l,i.paused=!1,d(r,[a,c,h],l),r._playStart=t.currentTime,i.gain.value=r._volume,void 0===i.bufferSource.start?i.bufferSource.noteGrainOn(0,s,o):i.bufferSource.start(0,s,o)}else{if(4!==i.readyState&&(i.readyState||!navigator.isCocoonJS))return r._clearEndTimer(l),function(){var t=r,s=e,o=n,u=i,a=function(){t.play(s,o),u.removeEventListener("canplaythrough",a,!1)};u.addEventListener("canplaythrough",a,!1)}(),r;i.readyState=4,i.id=l,i.currentTime=s,i.muted=f._muted||i.muted,i.volume=r._volume*f.volume(),setTimeout(function(){i.play()},0)}return r.on("play"),"function"==typeof n&&n(l),r}),r):("function"==typeof n&&n(),r):(r.on("load",function(){r.play(e,n)}),r)},pause:function(e){var t=this;if(!t._loaded)return t.on("play",function(){t.pause(e)}),t;t._clearEndTimer(e);var n=e?t._nodeById(e):t._activeNode();if(n)if(n._pos=t.pos(null,e),t._webAudio){if(!n.bufferSource||n.paused)return t;n.paused=!0,void 0===n.bufferSource.stop?n.bufferSource.noteOff(0):n.bufferSource.stop(0)}else n.pause();return t.on("pause"),t},stop:function(e){var t=this;if(!t._loaded)return t.on("play",function(){t.stop(e)}),t;t._clearEndTimer(e);var n=e?t._nodeById(e):t._activeNode();if(n)if(n._pos=0,t._webAudio){if(!n.bufferSource||n.paused)return t;n.paused=!0,void 0===n.bufferSource.stop?n.bufferSource.noteOff(0):n.bufferSource.stop(0)}else isNaN(n.duration)||(n.pause(),n.currentTime=0);return t},mute:function(e){var t=this;if(!t._loaded)return t.on("play",function(){t.mute(e)}),t;var n=e?t._nodeById(e):t._activeNode();return n&&(t._webAudio?n.gain.value=0:n.muted=!0),t},unmute:function(e){var t=this;if(!t._loaded)return t.on("play",function(){t.unmute(e)}),t;var n=e?t._nodeById(e):t._activeNode();return n&&(t._webAudio?n.gain.value=t._volume:n.muted=!1),t},volume:function(e,t){var n=this;if(e=parseFloat(e),e>=0&&1>=e){if(n._volume=e,!n._loaded)return n.on("play",function(){n.volume(e,t)}),n;var r=t?n._nodeById(t):n._activeNode();return r&&(n._webAudio?r.gain.value=e:r.volume=e*f.volume()),n}return n._volume},loop:function(e){var t=this;return"boolean"==typeof e?(t._loop=e,t):t._loop},sprite:function(e){var t=this;return"object"==typeof e?(t._sprite=e,t):t._sprite},pos:function(e,n){var r=this;if(!r._loaded)return r.on("load",function(){r.pos(e)}),"number"==typeof e?r:r._pos||0;e=parseFloat(e);var i=n?r._nodeById(n):r._activeNode();if(i)return e>=0?(r.pause(n),i._pos=e,r.play(i._sprite,n),r):r._webAudio?i._pos+(t.currentTime-r._playStart):i.currentTime;if(e>=0)return r;for(var s=0;s<r._audioNode.length;s++)if(r._audioNode[s].paused&&4===r._audioNode[s].readyState)return r._webAudio?r._audioNode[s]._pos:r._audioNode[s].currentTime},pos3d:function(e,t,n,r){var i=this;if(t=void 0!==t&&t?t:0,n=void 0!==n&&n?n:-.5,!i._loaded)return i.on("play",function(){i.pos3d(e,t,n,r)}),i;if(!(e>=0||0>e))return i._pos3d;if(i._webAudio){var s=r?i._nodeById(r):i._activeNode();s&&(i._pos3d=[e,t,n],s.panner.setPosition(e,t,n),s.panner.panningModel=i._model||"HRTF")}return i},fade:function(e,t,n,r,i){var s=this,o=Math.abs(e-t),u=e>t?"down":"up",a=o/.01,f=n/a;if(!s._loaded)return s.on("load",function(){s.fade(e,t,n,r,i)}),s;s.volume(e,i);for(var l=1;a>=l;l++)!function(){var e=s._volume+("up"===u?.01:-.01)*l,n=Math.round(1e3*e)/1e3,o=t;setTimeout(function(){s.volume(n,i),n===o&&r&&r()},f*l)}()},fadeIn:function(e,t,n){return this.volume(0).play().fade(0,e,t,n)},fadeOut:function(e,t,n,r){var i=this;return i.fade(i._volume,e,t,function(){n&&n(),i.pause(r),i.on("end")},r)},_nodeById:function(e){for(var t=this,n=t._audioNode[0],r=0;r<t._audioNode.length;r++)if(t._audioNode[r].id===e){n=t._audioNode[r];break}return n},_activeNode:function(){for(var e=this,t=null,n=0;n<e._audioNode.length;n++)if(!e._audioNode[n].paused){t=e._audioNode[n];break}return e._drainPool(),t},_inactiveNode:function(e){for(var t=this,n=null,r=0;r<t._audioNode.length;r++)if(t._audioNode[r].paused&&4===t._audioNode[r].readyState){e(t._audioNode[r]),n=!0;break}if(t._drainPool(),!n){var i;if(t._webAudio)i=t._setupAudioNode(),e(i);else{t.load(),i=t._audioNode[t._audioNode.length-1];var s=navigator.isCocoonJS?"canplaythrough":"loadedmetadata",o=function(){i.removeEventListener(s,o,!1),e(i)};i.addEventListener(s,o,!1)}}},_drainPool:function(){var e,t=this,n=0;for(e=0;e<t._audioNode.length;e++)t._audioNode[e].paused&&n++;for(e=t._audioNode.length-1;e>=0&&!(5>=n);e--)t._audioNode[e].paused&&(t._webAudio&&t._audioNode[e].disconnect(0),n--,t._audioNode.splice(e,1))},_clearEndTimer:function(e){for(var t=this,n=0,r=0;r<t._onendTimer.length;r++)if(t._onendTimer[r].id===e){n=r;break}var i=t._onendTimer[n];i&&(clearTimeout(i.timer),t._onendTimer.splice(n,1))},_setupAudioNode:function(){var e=this,n=e._audioNode,r=e._audioNode.length;return n[r]=void 0===t.createGain?t.createGainNode():t.createGain(),n[r].gain.value=e._volume,n[r].paused=!0,n[r]._pos=0,n[r].readyState=4,n[r].connect(s),n[r].panner=t.createPanner(),n[r].panner.panningModel=e._model||"equalpower",n[r].panner.setPosition(e._pos3d[0],e._pos3d[1],e._pos3d[2]),n[r].panner.connect(n[r]),n[r]},on:function(e,t){var n=this,r=n["_on"+e];if("function"==typeof t)r.push(t);else for(var i=0;i<r.length;i++)t?r[i].call(n,t):r[i].call(n);return n},off:function(e,t){var n=this,r=n["_on"+e],i=t?""+t:null;if(i){for(var s=0;s<r.length;s++)if(i===""+r[s]){r.splice(s,1);break}}else n["_on"+e]=[];return n},unload:function(){for(var t=this,n=t._audioNode,r=0;r<t._audioNode.length;r++)n[r].paused||(t.stop(n[r].id),t.on("end",n[r].id)),t._webAudio?n[r].disconnect(0):n[r].src="";for(r=0;r<t._onendTimer.length;r++)clearTimeout(t._onendTimer[r].timer);var i=f._howls.indexOf(t);null!==i&&i>=0&&f._howls.splice(i,1),delete e[t._src],t=null}},n)var c=function(t,n){if(n in e)return t._duration=e[n].duration,void p(t);if(/^data:[^;]+;base64,/.test(n)){for(var r=atob(n.split(",")[1]),i=new Uint8Array(r.length),s=0;s<r.length;++s)i[s]=r.charCodeAt(s);h(i.buffer,t,n)}else{var o=new XMLHttpRequest;o.open("GET",n,!0),o.responseType="arraybuffer",o.onload=function(){h(o.response,t,n)},o.onerror=function(){t._webAudio&&(t._buffer=!0,t._webAudio=!1,t._audioNode=[],delete t._gainNode,delete e[n],t.load())};try{o.send()}catch(u){o.onerror()}}},h=function(n,r,i){t.decodeAudioData(n,function(t){t&&(e[i]=t,p(r,t))},function(){r.on("loaderror")})},p=function(e,t){e._duration=t?t.duration:e._duration,0===Object.getOwnPropertyNames(e._sprite).length&&(e._sprite={_default:[0,1e3*e._duration]}),e._loaded||(e._loaded=!0,e.on("load")),e._autoplay&&e.play()},d=function(n,r,i){var s=n._nodeById(i);s.bufferSource=t.createBufferSource(),s.bufferSource.buffer=e[n._src],s.bufferSource.connect(s.panner),s.bufferSource.loop=r[0],r[0]&&(s.bufferSource.loopStart=r[1],s.bufferSource.loopEnd=r[1]+r[2]),s.bufferSource.playbackRate.value=n._rate};"function"==typeof define&&define.amd&&define(function(){return{Howler:f,Howl:l}}),"undefined"!=typeof exports&&(exports.Howler=f,exports.Howl=l),"undefined"!=typeof window&&(window.Howler=f,window.Howl=l)}();

/*! howler.js v2.0.0-beta | (c) 2013-2015, James Simpson of GoldFire Studios | MIT License | howlerjs.com */
!function () {
    "use strict";
    function e() {
        try {
            "undefined" != typeof AudioContext ? n = new AudioContext : "undefined" != typeof webkitAudioContext ? n = new webkitAudioContext : o = !1
        } catch (e) {
            o = !1
        }
        if (!o)if ("undefined" != typeof Audio)try {
            new Audio
        } catch (e) {
            t = !0
        } else t = !0
    }

    var n = null, o = !0, t = !1;
    if (e(), o) {
        var r = "undefined" == typeof n.createGain ? n.createGainNode() : n.createGain();
        r.gain.value = 1, r.connect(n.destination)
    }
    var d = function () {
        this.init()
    };
    d.prototype = {
        init: function () {
            var e = this || u;
            return e._codecs = {}, e._howls = [], e._muted = !1, e._volume = 1, e.iOSAutoEnable = !0, e.noAudio = t, e.usingWebAudio = o, e.ctx = n, t || e._setupCodecs(), e
        }, volume: function (e) {
            var n = this || u;
            if (e = parseFloat(e), "undefined" != typeof e && e >= 0 && 1 >= e) {
                n._volume = e, o && (r.gain.value = e);
                for (var t = 0; t < n._howls.length; t++)if (!n._howls[t]._webAudio)for (var d = n._howls[t]._getSoundIds(), a = 0; a < d.length; a++) {
                    var i = n._howls[t]._soundById(d[a]);
                    i && i._node && (i._node.volume = i._volume * e)
                }
                return n
            }
            return n._volume
        }, mute: function (e) {
            var n = this || u;
            n._muted = e, o && (r.gain.value = e ? 0 : n._volume);
            for (var t = 0; t < n._howls.length; t++)if (!n._howls[t]._webAudio)for (var d = n._howls[t]._getSoundIds(), a = 0; a < d.length; a++) {
                var i = n._howls[t]._soundById(d[a]);
                i && i._node && (i._node.muted = e ? !0 : i._muted)
            }
            return n
        }, codecs: function (e) {
            return (this || u)._codecs[e]
        }, _setupCodecs: function () {
            var e = this || u, n = new Audio, o = n.canPlayType("audio/mpeg;").replace(/^no$/, "");
            return e._codecs = {
                mp3: !(!o && !n.canPlayType("audio/mp3;").replace(/^no$/, "")),
                mpeg: !!o,
                opus: !!n.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
                ogg: !!n.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
                wav: !!n.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
                aac: !!n.canPlayType("audio/aac;").replace(/^no$/, ""),
                m4a: !!(n.canPlayType("audio/x-m4a;") || n.canPlayType("audio/m4a;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""),
                mp4: !!(n.canPlayType("audio/x-mp4;") || n.canPlayType("audio/mp4;") || n.canPlayType("audio/aac;")).replace(/^no$/, ""),
                weba: !!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
                webm: !!n.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, "")
            }, e
        }, _enableiOSAudio: function () {
            var e = this || u;
            if (!n || !e._iOSEnabled && /iPhone|iPad|iPod/i.test(navigator.userAgent)) {
                e._iOSEnabled = !1;
                var o = function () {
                    var t = n.createBuffer(1, 1, 22050), r = n.createBufferSource();
                    r.buffer = t, r.connect(n.destination), "undefined" == typeof r.start ? r.noteOn(0) : r.start(0), setTimeout(function () {
                        (r.playbackState === r.PLAYING_STATE || r.playbackState === r.FINISHED_STATE) && (e._iOSEnabled = !0, e.iOSAutoEnable = !1, window.removeEventListener("touchstart", o, !1))
                    }, 0)
                };
                return window.addEventListener("touchstart", o, !1), e
            }
        }
    };
    var u = new d, a = function (e) {
        var n = this;
        return e.src && 0 !== e.src.length ? void n.init(e) : void console.error("An array of source files must be passed with any new Howl.")
    };
    a.prototype = {
        init: function (e) {
            var t = this;
            return t._autoplay = e.autoplay || !1, t._ext = e.ext || null, t._html5 = e.html5 || !1, t._muted = e.mute || !1, t._loop = e.loop || !1, t._pool = e.pool || 5, t._preload = "boolean" == typeof e.preload ? e.preload : !0, t._rate = e.rate || 1, t._sprite = e.sprite || {}, t._src = "string" != typeof e.src ? e.src : [e.src], t._volume = void 0 !== e.volume ? e.volume : 1, t._duration = 0, t._loaded = !1, t._sounds = [], t._endTimers = {}, t._onend = e.onend ? [{fn: e.onend}] : [], t._onfaded = e.onfaded ? [{fn: e.onfaded}] : [], t._onload = e.onload ? [{fn: e.onload}] : [], t._onloaderror = e.onloaderror ? [{fn: e.onloaderror}] : [], t._onpause = e.onpause ? [{fn: e.onpause}] : [], t._onplay = e.onplay ? [{fn: e.onplay}] : [], t._webAudio = o && !t._html5, "undefined" != typeof n && n && u.iOSAutoEnable && u._enableiOSAudio(), u._howls.push(t), t._preload && t.load(), t
        }, load: function () {
            var e = this, n = null;
            if (t)return void e._emit("loaderror");
            "string" == typeof e._src && (e._src = [e._src]);
            for (var o = 0; o < e._src.length; o++) {
                var r, d;
                if (e._ext && e._ext[o] ? r = e._ext[o] : (d = e._src[o], r = /^data:audio\/([^;,]+);/i.exec(d), r || (r = /\.([^.]+)$/.exec(d.split("?", 1)[0])), r && (r = r[1].toLowerCase())), u.codecs(r)) {
                    n = e._src[o];
                    break
                }
            }
            return n ? (e._src = n, new i(e), e._webAudio && s(e), e) : void e._emit("loaderror")
        }, play: function (e) {
            var o = this, t = arguments, r = null;
            if ("number" == typeof e)r = e, e = null; else if ("undefined" == typeof e) {
                e = "__default";
                for (var d = 0, a = 0; a < o._sounds.length; a++)o._sounds[a]._paused && !o._sounds[a]._ended && (d++, r = o._sounds[a]._id);
                1 === d ? e = null : r = null
            }
            var i = r ? o._soundById(r) : o._inactiveSound();
            if (!i)return null;
            if (r && !e && (e = i._sprite || "__default"), !o._loaded && !o._sprite[e])return o.once("load", function () {
                o.play(o._soundById(i._id) ? i._id : void 0)
            }), i._id;
            if (r && !i._paused)return i._id;
            var _ = i._seek > 0 ? i._seek : o._sprite[e][0] / 1e3, s = (o._sprite[e][0] + o._sprite[e][1]) / 1e3 - _, l = function () {
                var t = !(!i._loop && !o._sprite[e][2]);
                o._emit("end", i._id), !o._webAudio && t && o.stop(i._id).play(i._id), o._webAudio && t && (o._emit("play", i._id), i._seek = i._start || 0, i._playStart = n.currentTime, o._endTimers[i._id] = setTimeout(l, 1e3 * (i._stop - i._start) / Math.abs(o._rate))), o._webAudio && !t && (i._paused = !0, i._ended = !0, i._seek = i._start || 0, o._clearTimer(i._id), i._node.bufferSource = null), o._webAudio || t || o.stop(i._id)
            };
            o._endTimers[i._id] = setTimeout(l, 1e3 * s / Math.abs(o._rate)), i._paused = !1, i._ended = !1, i._sprite = e, i._seek = _, i._start = o._sprite[e][0] / 1e3, i._stop = (o._sprite[e][0] + o._sprite[e][1]) / 1e3, i._loop = !(!i._loop && !o._sprite[e][2]);
            var f = i._node;
            if (o._webAudio) {
                var c = function () {
                    o._refreshBuffer(i);
                    var e = i._muted || o._muted ? 0 : i._volume * u.volume();
                    f.gain.setValueAtTime(e, n.currentTime), i._playStart = n.currentTime, "undefined" == typeof f.bufferSource.start ? i._loop ? f.bufferSource.noteGrainOn(0, _, 86400) : f.bufferSource.noteGrainOn(0, _, s) : i._loop ? f.bufferSource.start(0, _, 86400) : f.bufferSource.start(0, _, s), o._endTimers[i._id] || (o._endTimers[i._id] = setTimeout(l, 1e3 * s / Math.abs(o._rate))), t[1] || setTimeout(function () {
                        o._emit("play", i._id)
                    }, 0)
                };
                o._loaded ? c() : (o.once("load", c), o._clearTimer(i._id))
            } else {
                var p = function () {
                    f.currentTime = _, f.muted = i._muted || o._muted || u._muted || f.muted, f.volume = i._volume * u.volume(), f.playbackRate = o._rate, setTimeout(function () {
                        f.play(), t[1] || o._emit("play", i._id)
                    }, 0)
                };
                if (4 === f.readyState || !f.readyState && navigator.isCocoonJS)p(); else {
                    var m = function () {
                        o._endTimers[i._id] = setTimeout(l, 1e3 * s / Math.abs(o._rate)), p(), f.removeEventListener("canplaythrough", m, !1)
                    };
                    f.addEventListener("canplaythrough", m, !1), o._clearTimer(i._id)
                }
            }
            return i._id
        }, pause: function (e) {
            var n = this;
            if (!n._loaded)return n.once("play", function () {
                n.pause(e)
            }), n;
            for (var o = n._getSoundIds(e), t = 0; t < o.length; t++) {
                n._clearTimer(o[t]);
                var r = n._soundById(o[t]);
                if (r && !r._paused) {
                    if (r._seek = n.seek(o[t]), r._paused = !0, n._webAudio) {
                        if (!r._node.bufferSource)return n;
                        "undefined" == typeof r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0), r._node.bufferSource = null
                    } else isNaN(r._node.duration) || r._node.pause();
                    arguments[1] || n._emit("pause", r._id)
                }
            }
            return n
        }, stop: function (e) {
            var n = this;
            if (!n._loaded)return "undefined" != typeof n._sounds[0]._sprite && n.once("play", function () {
                n.stop(e)
            }), n;
            for (var o = n._getSoundIds(e), t = 0; t < o.length; t++) {
                n._clearTimer(o[t]);
                var r = n._soundById(o[t]);
                if (r && !r._paused)if (r._seek = r._start || 0, r._paused = !0, r._ended = !0, n._webAudio && r._node) {
                    if (!r._node.bufferSource)return n;
                    "undefined" == typeof r._node.bufferSource.stop ? r._node.bufferSource.noteOff(0) : r._node.bufferSource.stop(0), r._node.bufferSource = null
                } else r._node && !isNaN(r._node.duration) && (r._node.pause(), r._node.currentTime = r._start || 0)
            }
            return n
        }, mute: function (e, o) {
            var t = this;
            if (!t._loaded)return t.once("play", function () {
                t.mute(e, o)
            }), t;
            if ("undefined" == typeof o) {
                if ("boolean" != typeof e)return t._muted;
                t._muted = e
            }
            for (var r = t._getSoundIds(o), d = 0; d < r.length; d++) {
                var a = t._soundById(r[d]);
                a && (a._muted = e, t._webAudio && a._node ? a._node.gain.setValueAtTime(e ? 0 : a._volume * u.volume(), n.currentTime) : a._node && (a._node.muted = u._muted ? !0 : e))
            }
            return t
        }, volume: function () {
            var e, o, t = this, r = arguments;
            if (0 === r.length)return t._volume;
            if (1 === r.length) {
                var d = t._getSoundIds(), a = d.indexOf(r[0]);
                a >= 0 ? o = parseInt(r[0], 10) : e = parseFloat(r[0])
            } else 2 === r.length && (e = parseFloat(r[0]), o = parseInt(r[1], 10));
            var i;
            if (!("undefined" != typeof e && e >= 0 && 1 >= e))return i = o ? t._soundById(o) : t._sounds[0], i ? i._volume : 0;
            if (!t._loaded)return t.once("play", function () {
                t.volume.apply(t, r)
            }), t;
            "undefined" == typeof o && (t._volume = e), o = t._getSoundIds(o);
            for (var _ = 0; _ < o.length; _++)i = t._soundById(o[_]), i && (i._volume = e, t._webAudio && i._node ? i._node.gain.setValueAtTime(e * u.volume(), n.currentTime) : i._node && (i._node.volume = e * u.volume()));
            return t
        }, fade: function (e, o, t, r) {
            var d = this;
            if (!d._loaded)return d.once("play", function () {
                d.fade(e, o, t, r)
            }), d;
            d.volume(e, r);
            for (var u = d._getSoundIds(r), a = 0; a < u.length; a++) {
                var i = d._soundById(u[a]);
                if (i)if (d._webAudio) {
                    var _ = n.currentTime, s = _ + t / 1e3;
                    i._volume = e, i._node.gain.setValueAtTime(e, _), i._node.gain.linearRampToValueAtTime(o, s), setTimeout(function (e, t) {
                        setTimeout(function () {
                            t._volume = o, d._emit("faded", e)
                        }, s - n.currentTime > 0 ? Math.ceil(1e3 * (s - n.currentTime)) : 0)
                    }.bind(d, u[a], i), t)
                } else {
                    var l = Math.abs(e - o), f = e > o ? "out" : "in", c = l / .01, p = t / c;
                    !function () {
                        var n = e, t = setInterval(function (e) {
                            n += "in" === f ? .01 : -.01, n = Math.max(0, n), n = Math.min(1, n), n = Math.round(100 * n) / 100, d.volume(n, e), n === o && (clearInterval(t), d._emit("faded", e))
                        }.bind(d, u[a]), p)
                    }()
                }
            }
            return d
        }, loop: function () {
            var e, n, o, t = this, r = arguments;
            if (0 === r.length)return t._loop;
            if (1 === r.length) {
                if ("boolean" != typeof r[0])return o = t._soundById(parseInt(r[0], 10)), o ? o._loop : !1;
                e = r[0], t._loop = e
            } else 2 === r.length && (e = r[0], n = parseInt(r[1], 10));
            for (var d = t._getSoundIds(n), u = 0; u < d.length; u++)o = t._soundById(d[u]), o && (o._loop = e, t._webAudio && o._node && (o._node.bufferSource.loop = e));
            return t
        }, seek: function () {
            var e, o, t = this, r = arguments;
            if (0 === r.length)o = t._sounds[0]._id; else if (1 === r.length) {
                var d = t._getSoundIds(), u = d.indexOf(r[0]);
                u >= 0 ? o = parseInt(r[0], 10) : (o = t._sounds[0]._id, e = parseFloat(r[0]))
            } else 2 === r.length && (e = parseFloat(r[0]), o = parseInt(r[1], 10));
            if ("undefined" == typeof o)return t;
            if (!t._loaded)return t.once("load", function () {
                t.seek.apply(t, r)
            }), t;
            var a = t._soundById(o);
            if (a) {
                if (!(e >= 0))return t._webAudio ? a._seek + t.playing(o) ? n.currentTime - a._playStart : 0 : a._node.currentTime;
                var i = t.playing(o);
                i && t.pause(o, !0), a._seek = e, t._clearTimer(o), i && t.play(o, !0)
            }
            return t
        }, playing: function (e) {
            var n = this, o = n._soundById(e) || n._sounds[0];
            return o ? !o._paused : !1
        }, duration: function () {
            return this._duration
        }, unload: function () {
            for (var e = this, n = e._sounds, o = 0; o < n.length; o++) {
                n[o]._paused || (e.stop(n[o]._id), e._emit("end", n[o]._id)), e._webAudio || (n[o]._node.src = "", n[o]._node.removeEventListener("error", n[o]._errorFn, !1), n[o]._node.removeEventListener("canplaythrough", n[o]._loadFn, !1)), delete n[o]._node, e._clearTimer(n[o]._id);
                var t = u._howls.indexOf(e);
                t >= 0 && u._howls.splice(t, 1)
            }
            return _ && delete _[e._src], e = null, null
        }, on: function (e, n, o) {
            var t = this, r = t["_on" + e];
            return "function" == typeof n && r.push({id: o, fn: n}), t
        }, off: function (e, n, o) {
            var t = this, r = t["_on" + e];
            if (n) {
                for (var d = 0; d < r.length; d++)if (n === r[d].fn && o === r[d].id) {
                    r.splice(d, 1);
                    break
                }
            } else r = [];
            return t
        }, once: function (e, n, o) {
            var t = this, r = function () {
                n.apply(t, arguments), t.off(e, r, o)
            };
            return t.on(e, r, o), t
        }, _emit: function (e, n, o) {
            for (var t = this, r = t["_on" + e], d = 0; d < r.length; d++)r[d].id && r[d].id !== n || setTimeout(function (e) {
                e.call(this, n, o)
            }.bind(t, r[d].fn), 0);
            return t
        }, _clearTimer: function (e) {
            var n = this;
            return n._endTimers[e] && (clearTimeout(n._endTimers[e]), delete n._endTimers[e]), n
        }, _soundById: function (e) {
            for (var n = this, o = 0; o < n._sounds.length; o++)if (e === n._sounds[o]._id)return n._sounds[o];
            return null
        }, _inactiveSound: function () {
            var e = this;
            e._drain();
            for (var n = 0; n < e._sounds.length; n++)if (e._sounds[n]._ended)return e._sounds[n].reset();
            return new i(e)
        }, _drain: function () {
            var e = this, n = e._pool, o = 0, t = 0;
            if (!(e._sounds.length < n)) {
                for (t = 0; t < e._sounds.length; t++)e._sounds[t]._ended && o++;
                for (t = e._sounds.length - 1; t >= 0; t--) {
                    if (n >= o)return;
                    e._sounds[t]._ended && (e._webAudio && e._sounds[t]._node && e._sounds[t]._node.disconnect(0), e._sounds.splice(t, 1), o--)
                }
            }
        }, _getSoundIds: function (e) {
            var n = this;
            if ("undefined" == typeof e) {
                for (var o = [], t = 0; t < n._sounds.length; t++)o.push(n._sounds[t]._id);
                return o
            }
            return [e]
        }, _refreshBuffer: function (e) {
            var o = this;
            return e._node.bufferSource = n.createBufferSource(), e._node.bufferSource.buffer = _[o._src], e._node.bufferSource.connect(e._panner ? e._panner : e._node), e._node.bufferSource.loop = e._loop, e._loop && (e._node.bufferSource.loopStart = e._start || 0, e._node.bufferSource.loopEnd = e._stop), e._node.bufferSource.playbackRate.value = o._rate, o
        }
    };
    var i = function (e) {
        this._parent = e, this.init()
    };
    if (i.prototype = {
            init: function () {
                var e = this, n = e._parent;
                return e._muted = n._muted, e._loop = n._loop, e._volume = n._volume, e._muted = n._muted, e._seek = 0, e._paused = !0, e._ended = !0, e._id = Math.round(Date.now() * Math.random()), n._sounds.push(e), e.create(), e
            }, create: function () {
                var e = this, o = e._parent, t = u._muted || e._muted || e._parent._muted ? 0 : e._volume * u.volume();
                return o._webAudio ? (e._node = "undefined" == typeof n.createGain ? n.createGainNode() : n.createGain(), e._node.gain.setValueAtTime(t, n.currentTime), e._node.paused = !0, e._node.connect(r)) : (e._node = new Audio, e._errorFn = e._errorListener.bind(e), e._node.addEventListener("error", e._errorFn, !1), e._loadFn = e._loadListener.bind(e), e._node.addEventListener("canplaythrough", e._loadFn, !1), e._node.src = o._src, e._node.preload = "auto", e._node.volume = t, e._node.load()), e
            }, reset: function () {
                var e = this, n = e._parent;
                return e._muted = n._muted, e._loop = n._loop, e._volume = n._volume, e._muted = n._muted, e._seek = 0, e._paused = !0, e._ended = !0, e._sprite = null, e._id = Math.round(Date.now() * Math.random()), e
            }, _errorListener: function () {
                var e = this;
                e._node.error && 4 === e._node.error.code && (u.noAudio = !0), e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0), e._node.removeEventListener("error", e._errorListener, !1)
            }, _loadListener: function () {
                var e = this, n = e._parent;
                n._duration = Math.ceil(10 * e._node.duration) / 10, 0 === Object.keys(n._sprite).length && (n._sprite = {__default: [0, 1e3 * n._duration]}), n._loaded || (n._loaded = !0, n._emit("load")), n._autoplay && n.play(), e._node.removeEventListener("canplaythrough", e._loadFn, !1)
            }
        }, o)var _ = {}, s = function (e) {
        var n = e._src;
        if (_[n])return e._duration = _[n].duration, void c(e);
        if (/^data:[^;]+;base64,/.test(n)) {
            window.atob = window.atob || function (e) {
                for (var n, o, t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", r = String(e).replace(/=+$/, ""), d = 0, u = 0, a = ""; o = r.charAt(u++); ~o && (n = d % 4 ? 64 * n + o : o, d++ % 4) ? a += String.fromCharCode(255 & n >> (-2 * d & 6)) : 0)o = t.indexOf(o);
                return a
            };
            for (var o = atob(n.split(",")[1]), t = new Uint8Array(o.length), r = 0; r < o.length; ++r)t[r] = o.charCodeAt(r);
            f(t.buffer, e)
        } else {
            var d = new XMLHttpRequest;
            d.open("GET", n, !0), d.responseType = "arraybuffer", d.onload = function () {
                f(d.response, e)
            }, d.onerror = function () {
                e._webAudio && (e._html5 = !0, e._webAudio = !1, e._sounds = [], delete _[n], e.load())
            }, l(d)
        }
    }, l = function (e) {
        try {
            e.send()
        } catch (n) {
            e.onerror()
        }
    }, f = function (e, o) {
        n.decodeAudioData(e, function (e) {
            e && (_[o._src] = e, c(o, e))
        }, function () {
            o._emit("loaderror")
        })
    }, c = function (e, n) {
        n && !e._duration && (e._duration = n.duration), 0 === Object.keys(e._sprite).length && (e._sprite = {__default: [0, 1e3 * e._duration]}), e._loaded || (e._loaded = !0, e._emit("load")), e._autoplay && e.play()
    };
    "function" == typeof define && define.amd && define("howler", function () {
        return {Howler: u, Howl: a}
    }), "undefined" != typeof exports && (exports.Howler = u, exports.Howl = a), "undefined" != typeof window && (window.HowlerGlobal = d, window.Howler = u, window.Howl = a, window.Sound = i)
}();
/*! Effects Plugin */
!function () {
    "use strict";
    HowlerGlobal.prototype.init = function (e) {
        return function () {
            var n = this;
            return n._pos = [0, 0, 0], n._orientation = [0, 0, -1, 0, 1, 0], n._velocity = [0, 0, 0], n._listenerAttr = {
                dopplerFactor: 1,
                speedOfSound: 343.3
            }, e.call(this, o)
        }
    }(HowlerGlobal.prototype.init), HowlerGlobal.prototype.pos = function (e, n, t) {
        var o = this;
        return o.ctx && o.ctx.listener ? (n = "number" != typeof n ? o._pos[1] : n, t = "number" != typeof t ? o._pos[2] : t, "number" != typeof e ? o._pos : (o._pos = [e, n, t], o.ctx.listener.setPosition(o._pos[0], o._pos[1], o._pos[2]), o)) : o
    }, HowlerGlobal.prototype.orientation = function (e, n, t, o, r, i) {
        var a = this;
        if (!a.ctx || !a.ctx.listener)return a;
        var p = a._orientation;
        return n = "number" != typeof n ? p[1] : n, t = "number" != typeof t ? p[2] : t, o = "number" != typeof o ? p[3] : o, r = "number" != typeof r ? p[4] : r, i = "number" != typeof i ? p[5] : i, "number" != typeof e ? p : (a._orientation = [e, n, t, o, r, i], a.ctx.listener.setOrientation(p[0], p[1], p[2], p[3], p[4], p[5]), a)
    }, HowlerGlobal.prototype.velocity = function (e, n, t) {
        var o = this;
        return o.ctx && o.ctx.listener ? (n = "number" != typeof n ? o._velocity[1] : n, t = "number" != typeof t ? o._velocity[2] : t, "number" != typeof e ? o._velocity : (o._velocity = [e, n, t], o.ctx.listener.setVelocity(o._velocity[0], o._velocity[1], o._velocity[2]), o)) : o
    }, HowlerGlobal.prototype.listenerAttr = function (e) {
        var n = this;
        if (!n.ctx || !n.ctx.listener)return n;
        var t = n._listenerAttr;
        return e ? (n._listenerAttr = {
            dopplerFactor: "undefined" != typeof e.dopplerFactor ? e.dopplerFactor : t.dopplerFactor,
            speedOfSound: "undefined" != typeof e.speedOfSound ? e.speedOfSound : t.speedOfSound
        }, n.ctx.listener.dopplerFactor = t.dopplerFactor, n.ctx.listener.speedOfSound = t.speedOfSound, n) : t
    }, Howl.prototype.init = function (e) {
        return function (n) {
            var t = this;
            return t._orientation = n.orientation || [1, 0, 0], t._pos = n.pos || null, t._velocity = n.velocity || [0, 0, 0], t._pannerAttr = {
                coneInnerAngle: "undefined" != typeof n.coneInnerAngle ? n.coneInnerAngle : 360,
                coneOUterAngle: "undefined" != typeof n.coneOUterAngle ? n.coneOUterAngle : 360,
                coneOuterGain: "undefined" != typeof n.coneOuterGain ? n.coneOuterGain : 0,
                distanceModel: "undefined" != typeof n.distanceModel ? n.distanceModel : "inverse",
                maxDistance: "undefined" != typeof n.maxDistance ? n.maxDistance : 1e4,
                panningModel: "undefined" != typeof n.panningModel ? n.panningModel : "HRTF",
                refDistance: "undefined" != typeof n.refDistance ? n.refDistance : 1,
                rolloffFactor: "undefined" != typeof n.rolloffFactor ? n.rolloffFactor : 1
            }, e.call(this, n)
        }
    }(Howl.prototype.init), Howl.prototype.pos = function (n, t, o, r) {
        var i = this;
        if (!i._webAudio)return i;
        if (!i._loaded)return i.once("play", function () {
            i.pos(n, t, o, r)
        }), i;
        if (t = "number" != typeof t ? 0 : t, o = "number" != typeof o ? -.5 : o, "undefined" == typeof r) {
            if ("number" != typeof n)return i._pos;
            i._pos = [n, t, o]
        }
        for (var a = i._getSoundIds(r), p = 0; p < a.length; p++) {
            var l = i._soundById(a[p]);
            if (l) {
                if ("number" != typeof n)return l._pos;
                l._pos = [n, t, o], l._node && (l._panner || e(l), l._panner.setPosition(n, t, o))
            }
        }
        return i
    }, Howl.prototype.orientation = function (n, t, o, r) {
        var i = this;
        if (!i._webAudio)return i;
        if (!i._loaded)return i.once("play", function () {
            i.orientation(n, t, o, r)
        }), i;
        if (t = "number" != typeof t ? i._orientation[1] : t, o = "number" != typeof o ? i._orientation[1] : o, "undefined" == typeof r) {
            if ("number" != typeof n)return i._orientation;
            i._orientation = [n, t, o]
        }
        for (var a = i._getSoundIds(r), p = 0; p < a.length; p++) {
            var l = i._soundById(a[p]);
            if (l) {
                if ("number" != typeof n)return l._orientation;
                l._orientation = [n, t, o], l._node && (l._panner || e(l), l._panner.setOrientation(n, t, o))
            }
        }
        return i
    }, Howl.prototype.velocity = function (n, t, o, r) {
        var i = this;
        if (!i._webAudio)return i;
        if (!i._loaded)return i.once("play", function () {
            i.velocity(n, t, o, r)
        }), i;
        if (t = "number" != typeof t ? i._velocity[1] : t, o = "number" != typeof o ? i._velocity[1] : o, "undefined" == typeof r) {
            if ("number" != typeof n)return i._velocity;
            i._velocity = [n, t, o]
        }
        for (var a = i._getSoundIds(r), p = 0; p < a.length; p++) {
            var l = i._soundById(a[p]);
            if (l) {
                if ("number" != typeof n)return l._velocity;
                l._velocity = [n, t, o], l._node && (l._panner || e(l), l._panner.setVelocity(n, t, o))
            }
        }
        return i
    }, Howl.prototype.pannerAttr = function () {
        var n, t, o, r = this, i = arguments;
        if (!r._webAudio)return r;
        if (0 === i.length)return r._pannerAttr;
        if (1 === i.length) {
            if ("object" != typeof i[0])return o = r._soundById(parseInt(i[0], 10)), o ? o._pannerAttr : r._pannerAttr;
            n = i[0], "undefined" == typeof t && (r._pannerAttr = {
                coneInnerAngle: "undefined" != typeof n.coneInnerAngle ? n.coneInnerAngle : r._coneInnerAngle,
                coneOUterAngle: "undefined" != typeof n.coneOUterAngle ? n.coneOUterAngle : r._coneOUterAngle,
                coneOuterGain: "undefined" != typeof n.coneOuterGain ? n.coneOuterGain : r._coneOuterGain,
                distanceModel: "undefined" != typeof n.distanceModel ? n.distanceModel : r._distanceModel,
                maxDistance: "undefined" != typeof n.maxDistance ? n.maxDistance : r._maxDistance,
                panningModel: "undefined" != typeof n.panningModel ? n.panningModel : r._panningModel,
                refDistance: "undefined" != typeof n.refDistance ? n.refDistance : r._refDistance,
                rolloffFactor: "undefined" != typeof n.rolloffFactor ? n.rolloffFactor : r._rolloffFactor
            })
        } else 2 === i.length && (n = i[0], t = parseInt(i[1], 10));
        for (var a = r._getSoundIds(t), p = 0; p < a.length; p++)if (o = r._soundById(a[p])) {
            var l = o._pannerAttr;
            l = {
                coneInnerAngle: "undefined" != typeof n.coneInnerAngle ? n.coneInnerAngle : l.coneInnerAngle,
                coneOUterAngle: "undefined" != typeof n.coneOUterAngle ? n.coneOUterAngle : l.coneOUterAngle,
                coneOuterGain: "undefined" != typeof n.coneOuterGain ? n.coneOuterGain : l.coneOuterGain,
                distanceModel: "undefined" != typeof n.distanceModel ? n.distanceModel : l.distanceModel,
                maxDistance: "undefined" != typeof n.maxDistance ? n.maxDistance : l.maxDistance,
                panningModel: "undefined" != typeof n.panningModel ? n.panningModel : l.panningModel,
                refDistance: "undefined" != typeof n.refDistance ? n.refDistance : l.refDistance,
                rolloffFactor: "undefined" != typeof n.rolloffFactor ? n.rolloffFactor : l.rolloffFactor
            };
            var c = o._panner;
            c ? (c.coneInnerAngle = l.coneInnerAngle, c.coneOUterAngle = l.coneOUterAngle, c.coneOuterGain = l.coneOuterGain, c.distanceModel = l.distanceModel, c.maxDistance = l.maxDistance, c.panningModel = l.panningModel, c.refDistance = l.refDistance, c.rolloffFactor = l.rolloffFactor) : (o._pos || (o._pos = r._pos || [0, 0, -.5]), e(o))
        }
        return r
    }, Sound.prototype.init = function (e) {
        return function () {
            var n = this, t = n._parent;
            n._orientation = t._orientation, n._pos = t._pos, n._velocity = t._velocity, n._pannerAttr = t._pannerAttr, e.call(this), n._pos && t.pos(n._pos[0], n._pos[1], n._pos[2], n._id)
        }
    }(Sound.prototype.init), Sound.prototype.reset = function (e) {
        return function () {
            var n = this, t = n._parent;
            return n._orientation = t._orientation, n._pos = t._pos, n._velocity = t._velocity, n._pannerAttr = t._pannerAttr, e.call(this)
        }
    }(Sound.prototype.reset);
    var e = function (e) {
        e._panner = Howler.ctx.createPanner(), e._panner.coneInnerAngle = e._pannerAttr.coneInnerAngle, e._panner.coneOUterAngle = e._pannerAttr.coneOUterAngle, e._panner.coneOuterGain = e._pannerAttr.coneOuterGain, e._panner.distanceModel = e._pannerAttr.distanceModel, e._panner.maxDistance = e._pannerAttr.maxDistance, e._panner.panningModel = e._pannerAttr.panningModel, e._panner.refDistance = e._pannerAttr.refDistance, e._panner.rolloffFactor = e._pannerAttr.rolloffFactor, e._panner.setPosition(e._pos[0], e._pos[1], e._pos[2]), e._panner.setOrientation(e._orientation[0], e._orientation[1], e._orientation[2]), e._panner.setVelocity(e._velocity[0], e._velocity[1], e._velocity[2]), e._panner.connect(e._node), e._paused || e._parent.pause(e._id).play(e._id)
    }
}();
